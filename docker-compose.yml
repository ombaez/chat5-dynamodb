version: "3.7"
services:
  local:
    build:
      context: .
    image: node:10-alpine
    volumes:
      - ./src:/app/src
    container_name: api-local
    environment:
      NODE_ENV: local
      AWS_ACCESS_KEY_ID: anykey
      AWS_SECRET_ACCESS_KEY: anysecret
      AWS_DEFAULT_REGION: us-east-2
      DB_MAIN_HOST: mysql
      DB_MAIN_USER: root
      DB_MAIN_PASS: root
      DB_MAIN_NAME: main_db
    ports:
      - "3000:3000"
      - "9229:9229"
    tty: true
    entrypoint: ["npm", "run", "dev"]
  localstack:
    image: localstack/localstack
    container_name: api-dynamodb_localstack
    environment:
      SERVICES: dynamodb
    ports:
      - "4566:4566"
  setup:
    image: mesosphere/aws-cli
    container_name: api-dynamodb_setup
    volumes:
      - ./setup:/setup
    environment:
      AWS_ACCESS_KEY_ID: anykey
      AWS_SECRET_ACCESS_KEY: anysecret
      AWS_DEFAULT_REGION: us-east-2
    entrypoint: [""]
    depends_on:
      - localstack
    command: ["chmod", "+x", "/setup/setup.sh"]
  mysql:
    image: mysql:5.7
    container_name: api-sql
    ports:
      - 3306:3306
    volumes:
      - ./db/schema-test.sql:/docker-entrypoint-initdb.d/schema-test.sql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: test
      MYSQL_PASSWORD: testpass
  dev:
    build:
      context: .
    image: node:10-alpine
    volumes:
      - ./src:/app/src
    container_name: api-dev
    environment:
      NODE_ENV: local
      PORT: 80
      AWS_ACCESS_KEY_ID: keyId
      AWS_SECRET_ACCESS_KEY: accesKey
      AWS_DEFAULT_REGION: us-east-2
    ports:
      - "80:80"
      - "9229:9229"
    tty: true
    entrypoint: ["npm", "run", "dev"]
networks:
  default:
    name: api-dynamodb
