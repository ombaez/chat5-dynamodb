{
  "swagger": "2.0",
  "info": {
    "description": "Chat5 Endpoints",
    "version": "0.0.0",
    "title": "Chat5",
    "contact": {
      "email": "apiteam@swagger.io"
    }
  },
  "host": "",
  "basePath": "/v1",
  "tags": [
    {
      "name": "Users",
      "description": "About channels"
    },
    {
      "name": "Channels",
      "description": "About channels"
    },
    {
      "name": "Posts",
      "description": "About posts"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a user",
        "description": "",
        "operationId": "addUser",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "All data for storage - active users",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Edit user",
        "description": "Get users list",
        "operationId": "editUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "All data for storage - active users",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Get users list ",
        "description": "",
        "operationId": "",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "get all users",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "Logs out current logged in user session",
        "description": "log out user",
        "operationId": "logoutUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Finds user by id",
        "description": "",
        "operationId": "",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id value required",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/channels": {
      "post": {
        "tags": ["Channels"],
        "summary": "Create Channel",
        "description": "Returns a map of status codes to quantities",
        "operationId": "getInventory",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "/channels/invite": {
      "post": {
        "tags": ["Channels"],
        "summary": "Invite users to a channel",
        "description": "",
        "operationId": "",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "list users to invite",
            "required": true,
            "schema": {
              "$ref": "#/definitions/channels"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/channels/{id}": {
      "get": {
        "tags": ["Channels"],
        "summary": "Find channel by id",
        "description": "",
        "operationId": "",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": ["Channels"],
        "summary": "",
        "description": "",
        "operationId": "",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the channel that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/posts": {
      "post": {
        "tags": ["Posts"],
        "summary": "Create a post",
        "description": "",
        "operationId": "",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created a post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": ["Posts"],
        "summary": "Edit post",
        "description": "",
        "operationId": "",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "description": "channel_id",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "post_id",
            "in": "path",
            "description": "posts_id",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "description": "data to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": ["Posts"],
        "summary": "List channel's posts",
        "description": "",
        "operationId": "",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "description": "Lists all channel's post",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "Channels": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer"
        },
        "posts_id": {
          "type": "integer",
          "example": [12, 34, 67]
        },
        "participants_id": {
          "type": "string",
          "example": [12, 34, "pepe@mail.com"]
        },
        "channel_id": {
          "type": "integer"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "salt": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "active",
          "enum": ["anonymous", "active"]
        }
      }
    },
    "Posts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string"
        },
        "author_id": {
          "type": "string"
        },
        "dataText": {
          "$ref": "#/definitions/Text"
        },
        "dataPoll": {
          "$ref": "#/definitions/Poll"
        },
        "dataEvent": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "Text": {
      "type": "object",
      "properties": {
        "text_id": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "Poll": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "string"
        },
        "responses": {
          "$ref": "#/definitions/Responses"
        },
        "open_options": {
          "type": "boolean"
        },
        "options": {
          "type": "integer"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "responses": {
          "$ref": "#/definitions/Responses"
        },
        "date_start": {
          "type": "string",
          "format": "date-time"
        },
        "date_end": {
          "type": "string",
          "format": "date-time"
        },
        "status_char": {
          "type": "string"
        },
        "location_char": {
          "type": "string"
        }
      }
    },
    "Responses": {
      "type": "object",
      "properties": {
        "response_id": {
          "type": "integer"
        },
        "responder_id": {
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      }
    }
  }
}
